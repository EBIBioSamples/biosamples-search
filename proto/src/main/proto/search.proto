// https://www.baeldung.com/spring-boot-grpc
// https://docs.spring.io/spring-grpc/reference/getting-started.html
// https://grpc.io/docs/languages/java/basics/
syntax = "proto3";

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_package = "uk.ac.ebi.biosamples.search.grpc";
option java_outer_classname = "SearchApi";
option objc_class_prefix = "BSD";

package biosamples.search;

service Search {
  rpc searchSamples(SearchRequest) returns (SearchResponse) {}
  rpc getFacets(FacetRequest) returns (FacetResponse) {}
  rpc streamSamples(StreamRequest) returns (stream StreamResponse) {}
}

message Filter {
  oneof value {
    PublicFilter public = 1;
    AccessionFilter accession = 2;
    SraAccessionFilter sraAccession = 3;
    NameFilter name = 4;
    WebinIdFilter webin = 5;
    DateRangeFilter dateRange = 6;
    AttributeFilter attribute = 7;
    RelationshipFilter relationship = 8;
    ExternalRefFilter external = 9;
    StructuredDataFilter structuredData = 10;
  }
}

message PublicFilter {
  string webinId = 1;
}

message AccessionFilter {
  string accession = 1;
}

message SraAccessionFilter {
  string accession = 1;
}

message NameFilter {
  string name = 1;
}

message WebinIdFilter {
  string webinId = 1;
}

message DateRangeFilter {
  enum DateField {
    UPDATE = 0;
    CREATE = 1;
    RELEASE = 2;
    SUBMITTED = 3;
  }
  DateField field = 1;
  string from = 2;
  string to = 3;
}

message AttributeFilter {
  string field = 1;
  repeated string values = 2;
}

message RelationshipFilter {
  string type = 1;
  string source = 2;
  string target = 3;
}

message ExternalRefFilter {
  string archive = 1;
  string accession = 2;
}

message StructuredDataFilter {
  string type = 1;
  string field = 2;
  string value = 3;
}

message Facet {
  string type = 1;
  string field = 2;
  int64 count = 3;
  map<string, int64> buckets = 4;
}

message SearchAfter {
  google.protobuf.Timestamp update = 1;
  string accession = 2;
}

message SearchRequest {
  string text = 1;
  repeated Filter filters = 2;
  int32 size = 3;
  int32 number = 4;
  SearchAfter searchAfter = 5;
  repeated string sort = 6;
}

message SearchResponse {
  repeated string accessions = 1;
  int32 size = 2;
  int32 number = 3;
  int64 totalElements = 4;
  int32 totalPages = 5;
  SearchAfter searchAfter = 6;
  repeated string sort = 7;
}

message StreamRequest {
  string text = 1;
  repeated Filter filters = 2;
  SearchAfter searchAfter = 5;
  repeated string sort = 6;
}

message StreamResponse {
  string accession = 1;
  SearchAfter searchAfter = 2;
}

message FacetRequest {
  string text = 1;
  repeated Filter filters = 2;
  repeated string facets = 3;
  int32 size = 4;
}

message FacetResponse {
  repeated Facet facets = 1;
}